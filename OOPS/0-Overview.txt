Overview on Object Oriented Programming (OOP)
----------------------------------------------

=> Object Oriented Programming (OOP) is a Programming Paradigm based on the concept of objects.

=> We use objects to model(describe) real-world or abstract features.

=> Objects may contain data(properties) and code(methods). By using objects, we pack data and the corresponding behaviour into one block.

=> In OOP, objects are self-contained pieces/block of code.

=> Object are building blocks of applications, and interact with one another.

=> OOP was developed with the goal of organizing code, to make it more flexible and easier to maintain(avoid "messy code").


CLASS :- Like a blueprint from which we can create new objects.
/* Note: JavaScript does not support real classes. */

INSTANCE :- New object created from the class. Like a real house created from an abstract blueprint.


The 4 Fundamental OOP Principles
---------------------------------
1| Abstraction:- Ignoring or hiding details that doesn't matter, allowing us to get an overview perspective of the thing we are implementing, instead of messing with details that don't really matter to our implemention.

2| Encapsulation:- Keeping properties and methods private inside the class, so they are not accessible from outside the class. Some methods can be exposed as an public interface(API).
/*
# Prevents external code from accidentally manipulating internally properties/state.
# Allows to change internal implemention without the risk of breaking external code.
*/

3| Inheritance:- Making all properties and methods of a certain class available to a child class, forming hierarchical relationship between classes. This allows us to reuse common logic and to model real-world relationships.

4| Polymorphism:- A child class can overwrite a method it inherited from a parent class [It's more complex than that, but enough for our purposes].